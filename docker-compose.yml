version: '3'
services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    # Remove host port mapping; port 8080 is accessible internally
    expose:
      - "8080"
    environment:
      - HOST=0.0.0.0
      - PORT=8080
      - DB_PASSWORD=try_t0_hack_dbs401
      - DB_USER=dbs401
      # Use service name for internal communication
      - DB_CONNECT_STRING=oracle-db:1521/XEPDB1
      - JWT_SECRET=0a0dd7f9-5f45-485d-9ffd-054651192402
      - DB_CHECK_STRING=oracle-db
      - DBS401_FLAG2=G2{y0u_4r3_4lr3ady_expl0ited_l0c4l_file_inclu5ion}
    volumes:
      # Mount source code directory to container
      - ./src:/app/src
      # Mount public assets
      - ./public:/app/public
    depends_on:
      oracle-db:
        condition: service_healthy
    restart: "no"
    command: >
      sh -c "npm install && npm run start"

  oracle-db:
    image: container-registry.oracle.com/database/express:21.3.0-xe
    # Remove host port mappings; ports 1521 and 5500 are accessible internally
    expose:
      - "1521"
      - "5500"
    environment:
      - ORACLE_PWD=let-me-in
      - ORACLE_CHARACTERSET=AL32UTF8
    volumes:
      - ./init-scripts:/opt/oracle/scripts/setup
    # Don't use persistent storage, so database resets on each restart
    # - oracle-data:/opt/oracle/oradata
    restart: "no"
    healthcheck:
      test: [ "CMD", "sqlplus", "-L", "system/let-me-in@//oracle-db:1521/XEPDB1", "AS", "SYSDBA", "<<< 'SELECT 1 FROM DUAL;'" ]
      interval: 10s
      timeout: 10s
      retries: 10
      start_period: 40s

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - app
    restart: unless-stopped

volumes:
  oracle-data: